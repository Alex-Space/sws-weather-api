import axios from 'axios';

import { FILE_DICTIONARY, getKeyValue } from './storage.service.js';

const getIcon = icon => {
	switch (icon.slice(0, -1)) {
		case '01':
			return '‚òÄÔ∏è';
		case '02':
			return 'üå§Ô∏è';
		case '03':
			return '‚òÅÔ∏è';
		case '04':
			return '‚òÅÔ∏è';
		case '09':
			return 'üåßÔ∏è';
		case '10':
			return 'üå¶Ô∏è';
		case '11':
			return 'üå©Ô∏è';
		case '13':
			return '‚ùÑÔ∏è';
		case '50':
			return 'üå´Ô∏è';
	}
};

const getWeather = async () => {
	const token = await getKeyValue(FILE_DICTIONARY.token);
	const cities = await getKeyValue(FILE_DICTIONARY.cities);

	if (!token) {
		throw new Error('–¢–æ–∫–µ–Ω –Ω–µ –∑–∞–¥–∞–Ω, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ —Å –ø–æ–º–æ—â—å—é -t <token>');
	}

	if (!cities || !Array.isArray(cities) || cities.length === 0) {
		throw new Error('–°–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤ –ø—É—Å—Ç –∏–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω. –î–æ–±–∞–≤—å—Ç–µ –≥–æ—Ä–æ–¥–∞ —Å –ø–æ–º–æ—â—å—é -s <city> [city2 city3 ...]');
	}

	const results = [];

	for (const city of cities) {
		try {
			const { data } = await axios.get('https://api.openweathermap.org/data/2.5/weather', {
				params: { q: city, appid: token, lang: 'ru', units: 'metric' }
			});

			results.push({ city, data });
		} catch (error) {
			console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥–æ—Ä–æ–¥–∞ ${city}:`, error.message);
			results.push({ city, error: error.message });
		}
	}

	return results;
};

export { getIcon, getWeather };
